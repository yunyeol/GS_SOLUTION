<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SQL.Target">

    <select id="selectTargetList" resultType="Target">
        SELECT
            SCHDL_ID schdlId,
            ADDRESS_GRP_ID addressGrpId,
            SEND_GUBUN sendGubun,
            SEND_TYPE sendType
        FROM GS_SEND_SCHDL
        WHERE SEND_GUBUN = 'M'
        AND SEND_TYPE IN ('C_D', 'C_F')
        AND SEND_FLAG = '10'
    </select>

    <select id="selectTargetDbMinMax" resultType="Map">
        SELECT
            'selectTargetDbMinMax',
            MIN(A.ADDRESS_MBR_ID) addressMinId,
            MAX(A.ADDRESS_MBR_ID) addressMaxId
        FROM (
            SELECT
                GAM.ADDRESS_MBR_ID
            FROM GS_SEND_SCHDL GSS
            INNER JOIN GS_ADDRESS_MBR GAM ON (GSS.ADDRESS_GRP_ID = GAM.ADDRESS_GRP_ID )
            WHERE  GAM.ADDRESS_GRP_ID = ${addressGrpId}
            AND GSS.SCHDL_ID = ${schdlId}
        ) A
    </select>

    <select id="selectTargetFileMinMax" resultType="Map">
        SELECT
            'selectTargetFileMinMax',
            MIN(A.ID) addressMinId,
            MAX(A.ID) addressMaxId
        FROM (
            SELECT
                ID
            FROM GS_SEND_SCHDL GSS
            INNER JOiN GS_SEND_RAW GSR ON (GSS.SCHDL_ID = GSR.SCHDL_ID)
            WHERE GSS.SEND_TYPE = 'C_F'
            AND GSR.SEND_FLAG = 10
            AND GSS.SCHDL_ID = ${schdlId}
        ) A
    </select>

    <select id="selectDbTargetList" resultType="Target">
        SELECT * FROM (
            SELECT
                GAM.ADDRESS_MBR_ID addressMbrId,
                GAM.NAME mbrName,
                GAM.ADDRESS mbrAddress,
                GAM.DATA1 data1,
                GAM.DATA2 data2,
                GAM.DATA3 data3,
                GAM.REG_DATE regDate
            FROM GS_SEND_SCHDL GSS
            INNER JOIN GS_ADDRESS_MBR GAM ON (GSS.ADDRESS_GRP_ID = GAM.ADDRESS_GRP_ID )
            LEFT JOIN GS_SEND_RAW GSR ON (GSS.SCHDL_ID = GSR.SCHDL_ID AND GAM.ADDRESS = GSR.ADDRESS)
            WHERE GAM.ADDRESS_GRP_ID = ${addressGrpId}
            AND GSS.SCHDL_ID = ${schdlId}
            AND GSR.ADDRESS IS NULL
            ORDER BY SUBSTRING_INDEX(GAM.ADDRESS, '@', -1) ASC
        ) A
        WHERE A.addressMbrId BETWEEN ${addressMinId} AND ${addressMaxId}
    </select>

    <select id="selectFileTargetList" resultType="Target">
        SELECT * FROM (
            SELECT
                GSS.SCHDL_ID schdlId,
                GSS.SEND_TYPE sendType,

                GSR.ID rawId,
                GSR.ADDRESS mbrAddress,
                GSR.DATA1 data1,
                GSR.DATA2 data2,
                GSR.DATA3 data3,
                GSR.REG_DATE regDate
            FROM GS_SEND_SCHDL GSS
            INNER JOiN GS_SEND_RAW GSR ON (GSS.SCHDL_ID = GSR.SCHDL_ID)
            WHERE GSS.SEND_TYPE = 'C_F'
            AND GSR.SEND_FLAG = 10
            AND GSS.SCHDL_ID = ${schdlId}
            ORDER BY SUBSTRING_INDEX(GSR.ADDRESS, '@', -1) ASC
        ) A
        WHERE A.rawId BETWEEN ${addressMinId} AND ${addressMaxId}
    </select>

    <!--<select id="selectDbTargetRemainsCnt" resultType="Integer">
        SELECT
            COUNT(1)
        FROM GS_SEND_SCHDL GSS
        INNER JOIN GS_ADDRESS_MBR GAM ON (GSS.ADDRESS_GRP_ID = GAM.ADDRESS_GRP_ID )
        LEFT JOIN GS_SEND_RAW GSR ON (GSS.SCHDL_ID = GSR.SCHDL_ID AND GAM.ADDRESS = GSR.ADDRESS)
        WHERE GAM.ADDRESS_GRP_ID = ${addressGrpId}
        AND GSS.SCHDL_ID = ${schdlId}
        AND GSR.ADDRESS IS NULL
    </select>-->

    <!--<select id="selectFileTargetRemainsCnt" resultType="Integer">
        SELECT
            COUNT(1) cnt
        FROM GS_SEND_SCHDL GSS
        INNER JOiN GS_SEND_RAW GSR ON (GSS.SCHDL_ID = GSR.SCHDL_ID)
        WHERE GSS.SEND_TYPE = 'C_F'
        AND GSR.SEND_FLAG = 10
        AND GSS.SCHDL_ID = ${schdlId}
    </select>-->

    <update id="updateSendRawFlag">
        UPDATE GS_SEND_RAW SET SEND_FLAG = #{sendFlag} WHERE ID = ${rawId}
    </update>

    <update id="updateSendSchldFlag">
        UPDATE GS_SEND_SCHDL SET SEND_FLAG = #{sendFlag} WHERE SCHDL_ID = ${schdlId}
    </update>

    <update id="updateSendCnt">
        UPDATE GS_SEND_SCHDL SET TARGET_CNT = TARGET_CNT + #{targetCnt} WHERE SCHDL_ID = ${schdlId}
    </update>

    <insert id="insertSendRaw">
        INSERT INTO GS_SEND_RAW(SCHDL_ID, ADDRESS, DATA1, DATA2, DATA3, SEND_GUBUN, SEND_FLAG, REG_DATE)
		VALUES(${schdlId}, #{address}, #{data1}, #{data2}, #{data3}, 'M', '11', SYSDATE())
    </insert>
</mapper>

